(()=>{"use strict";var n={208:(n,t,e)=>{e.d(t,{A:()=>A});var o=e(354),r=e.n(o),a=e(314),i=e.n(a)()(r());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap);"]),i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Poetsen+One&display=swap);"]),i.push([n.id,':root {\n  --darkBrown: #402c2c;\n  --darkLateGray: #2f4f4f;\n}\n\n* {\n  font-family: "Roboto", sans-serif;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  height: 100vh;\n  scroll-behavior: smooth;\n  display: flex;\n  flex-direction: column;\n}\n\nheader {\n  text-align: center;\n  background-color: bisque;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0px 0px 3px 1px rgba(0, 0, 0, 0.3);\n}\n\n.check-icon {\n  width: 45px;\n}\n\nh1 {\n  font-family: "Poetsen One", "Roboto", sans-serif;\n  font-size: 36px;\n  letter-spacing: 2px;\n  color: #303f3f;\n  text-shadow: 2px 2px 2px #362a2abd;\n  margin: 15px 2px;\n}\n\n.plus {\n  width: 17px;\n}\n\n.container {\n  display: flex;\n  height: 100%;\n}\n\n/* project section */\n#myProjects {\n  color: white;\n  font-style: italic;\n  text-align: center;\n  border: none;\n  font-weight: 700;\n  font-size: 18px;\n  padding: 12px;\n  background-color: var(--darkLateGray);\n  cursor: pointer;\n  border-style: groove;\n  border-radius: 15px 0 15px 0;\n  transition: 0.3s;\n}\n\n#myProjects:hover {\n  background-color: #000028;\n  border-radius: 0 15px 0 15px;\n}\n\n#addBtn {\n  display: flex;\n  align-items: center;\n  font-weight: 700;\n  font-size: 16px;\n  gap: 5px;\n  padding: 9px 7px;\n  border: none;\n  cursor: pointer;\n  transition: 0.2s;\n}\n\n#addBtn:hover {\n  background-color: #fcd9ae;\n}\n\n.projects {\n  display: flex;\n  flex-direction: column;\n  width: 23%;\n  height: 628px;\n  overflow: auto;\n  gap: 5px;\n  background-color: #d3d3d373;\n  box-shadow: 0px 0px 3px 1px rgba(0, 0, 0, 0.3);\n}\n\n.projects-btns {\n  font-family: fantasy, "Roboto", sans-serif;\n  letter-spacing: 1px;\n  font-weight: 500;\n  font-size: 14px;\n  padding: 10px;\n  background-color: white;\n  color: #000028;\n  border: none;\n  border-bottom: 2px solid var(--darkLateGray);\n  box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n  transition: 0.2s;\n}\n\n.projects-btns:hover {\n  padding-left: 20px;\n  border-bottom: 2px solid bisque;\n}\n\n.projects-btns:active {\n  box-shadow: none;\n}\n\n.project-dialog {\n  border-style: dashed;\n  border: 2px dashed var(--darkLateGray);\n  border-radius: 20px;\n  width: 32%;\n  padding: 15px 40px;\n  animation: fade-out 0.5s ease-out;\n}\n\n.dialog-info {\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  gap: 8px;\n  font-weight: 600;\n}\n.dialog-btns {\n  display: flex;\n  justify-content: right;\n  gap: 10px;\n}\n\n.dialog-btns button {\n  padding: 6px 15px;\n  font-size: 14px;\n  font-weight: 600;\n  border: 1px solid var(--darkLateGray);\n  border-radius: 6px;\n  cursor: pointer;\n}\n\n.dialog-btns button:hover {\n  opacity: 0.8;\n}\n\ninput,\nselect {\n  padding: 8px;\n  border: none;\n  border-radius: 6px;\n  background-color: #f2f2f2;\n  box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.3);\n  font-size: 14px;\n}\n\ninput:focus,\nselect:focus {\n  outline: none;\n}\n\n.project-dialog::backdrop {\n  background-color: black;\n  opacity: 0.5;\n}\n\n.project-dialog[open] {\n  animation: fadein 0.5s ease-in forwards;\n}\n\n@keyframes fadein {\n  0% {\n    opacity: 0;\n    transform: scale(0);\n    display: none;\n  }\n\n  100% {\n    opacity: 1;\n    transform: scale(1);\n    display: block;\n  }\n}\n\n@keyframes fade-out {\n  0% {\n    opacity: 1;\n    transform: scale(1);\n    display: block;\n  }\n\n  100% {\n    opacity: 0;\n    transform: scale(0);\n    display: none;\n  }\n}\n\n.project-list {\n  width: 100%;\n  padding: 10px 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.project-list h2 {\n  font-family: "Poetsen One", sans-serif;\n  font-size: 31px;\n  color: var(--darkBrown);\n  margin-bottom: 0;\n}\n\n.project-list > p {\n  background-color: var(--darkBrown);\n  color: white;\n  width: fit-content;\n  padding: 4px 7px;\n  font-size: 15px;\n  border-radius: 3px;\n  letter-spacing: 1px;\n}\n\n.project-info {\n  width: 50%;\n  padding: 10px 30px;\n  font-weight: 500;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 6px;\n  margin-bottom: 10px;\n}\n\n.project-info span {\n  color: red;\n  font-weight: bold;\n}\n\n.project-info > div {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 7px;\n}\n.project-info button {\n  height: 35px;\n  padding: 0 25px;\n  border: none;\n  color: white;\n  background-color: black;\n  font-weight: bold;\n  border-radius: 20px;\n  box-shadow: 2px 2px 3px 0px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n}\n\n.project-info button:hover {\n  background-color: rgb(51, 51, 51);\n}\n\n/* todos section */\n\n.todo-add-btn {\n  border: none;\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  font-size: 14px;\n  gap: 5px;\n  padding: 9px 13px;\n  border-radius: 20px;\n  background-color: rgb(61, 102, 102);\n  color: white;\n  box-shadow: 2px 2px 3px 0px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n  transition: 0.2s;\n}\n\n.todo-add-btn:hover {\n  background-color: #000028;\n}\n\n.todo-list {\n  display: none;\n  width: 100%;\n}\n\n.todo-list h3 {\n  font-family: monospace;\n  font-size: 28px;\n  color: var(--darkBrown);\n}\n\n.todo-list h3::before {\n  content: "📑";\n}\n\n.todo {\n  background-color: rgba(226, 226, 226, 0.364);\n  position: relative;\n  display: flex;\n  width: 70%;\n  flex-direction: column;\n  border: 2px solid black;\n  border-radius: 10px;\n  padding: 10px 20px;\n  margin-top: 13px;\n  font-weight: 500;\n  font-size: 16px;\n  box-shadow: 2px 2px 3px 0px rgba(0, 0, 0, 0.3);\n  transition: all 0.6s ease 0s;\n}\n\n.todo p {\n  width: 50%;\n}\n\n.todo p + p {\n  font-family: monospace;\n  font-weight: bold;\n}\n\n.todo-btns {\n  width: 150px;\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  position: absolute;\n  top: 25%;\n  right: 15%;\n}\n\n.todo-btns button {\n  padding: 6px 15px;\n  font-size: 14px;\n  font-weight: 600;\n\n  background-color: rgb(186, 103, 1);\n  color: white;\n  border-radius: 6px;\n  cursor: pointer;\n  box-shadow: 2px 2px 3px 0px rgba(0, 0, 0, 0.3);\n  transition: 0.1s;\n}\n\n.todo-btns :nth-child(2) {\n  background-color: black;\n}\n\n.todo-btns button:hover {\n  color: black;\n  background-color: beige;\n}\n\n.todo-check {\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  gap: 2px;\n}\n\n.todo-check label {\n  font-family: Poetsen One, Arial, Helvetica, sans-serif;\n  font-size: 20px;\n  font-weight: bold;\n  color: var(--darkBrown);\n  cursor: pointer;\n}\n\ninput[type="checkbox"] {\n  cursor: pointer;\n  width: 17px;\n  height: 17px;\n  accent-color: var(--darkLateGray);\n}\n\n.project-container {\n  height: 100%;\n  padding: 10px 20px;\n}\n\n.todo-dialog {\n  border-style: dashed;\n  border: 2px dashed var(--darkLateGray);\n  border-radius: 20px;\n  width: 32%;\n  padding: 15px 40px;\n  animation: fade-out 0.5s ease-out;\n}\n\n.todo-inputs div {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  gap: 5px;\n}\n\n.todo-dialog[open] {\n  animation: fadein 0.5s ease-in forwards;\n}\n\n.todo-dialog::backdrop {\n  background-color: black;\n  opacity: 0.5;\n}\n\n.todo-dialog-btns {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.todo-dialog-btns button {\n  padding: 10px;\n  border: none;\n  color: white;\n  background-color: black;\n  font-weight: bold;\n  border-radius: 20px;\n  box-shadow: 2px 2px 3px 0px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n  transition: 0.1s;\n}\n\n.todo-dialog-btns button:hover {\n  opacity: 0.7;\n}\n\n#create-todo {\n  background-color: rgb(48, 0, 0);\n}\n\n.edit-todo {\n  border-style: dashed;\n  border: 2px dashed var(--darkLateGray);\n  border-radius: 20px;\n  width: 32%;\n  padding: 15px 40px;\n  animation: fade-out 0.5s ease-out;\n}\n\n.edit-todo[open] {\n  animation: fadein 0.5s ease-in forwards;\n}\n\n.edit-inputs {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  gap: 5px;\n  gap: 8px;\n}\n\n.edit-inputs button {\n  padding: 10px;\n  border: none;\n  color: white;\n  background-color: black;\n  font-weight: bold;\n  border-radius: 20px;\n  box-shadow: 2px 2px 3px 0px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n  transition: 0.1s;\n  margin-top: 10px;\n}\n\n.edit-inputs button:hover {\n  opacity: 0.7;\n}\n\n#edit-todo {\n  background-color: rgb(48, 0, 0);\n}\n\n/* footer section */\nfooter {\n  display: flex;\n  justify-content: space-between;\n  background-color: black;\n  padding: 5px 8px;\n}\n\nfooter p {\n  color: white;\n}\n\na {\n  color: rgb(212, 212, 212);\n  font-size: 15px;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");\n@import url("https://fonts.googleapis.com/css2?family=Poetsen+One&display=swap");\n\n:root {\n  --darkBrown: #402c2c;\n  --darkLateGray: #2f4f4f;\n}\n\n* {\n  font-family: "Roboto", sans-serif;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  height: 100vh;\n  scroll-behavior: smooth;\n  display: flex;\n  flex-direction: column;\n}\n\nheader {\n  text-align: center;\n  background-color: bisque;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0px 0px 3px 1px rgba(0, 0, 0, 0.3);\n}\n\n.check-icon {\n  width: 45px;\n}\n\nh1 {\n  font-family: "Poetsen One", "Roboto", sans-serif;\n  font-size: 36px;\n  letter-spacing: 2px;\n  color: #303f3f;\n  text-shadow: 2px 2px 2px #362a2abd;\n  margin: 15px 2px;\n}\n\n.plus {\n  width: 17px;\n}\n\n.container {\n  display: flex;\n  height: 100%;\n}\n\n/* project section */\n#myProjects {\n  color: white;\n  font-style: italic;\n  text-align: center;\n  border: none;\n  font-weight: 700;\n  font-size: 18px;\n  padding: 12px;\n  background-color: var(--darkLateGray);\n  cursor: pointer;\n  border-style: groove;\n  border-radius: 15px 0 15px 0;\n  transition: 0.3s;\n}\n\n#myProjects:hover {\n  background-color: #000028;\n  border-radius: 0 15px 0 15px;\n}\n\n#addBtn {\n  display: flex;\n  align-items: center;\n  font-weight: 700;\n  font-size: 16px;\n  gap: 5px;\n  padding: 9px 7px;\n  border: none;\n  cursor: pointer;\n  transition: 0.2s;\n}\n\n#addBtn:hover {\n  background-color: #fcd9ae;\n}\n\n.projects {\n  display: flex;\n  flex-direction: column;\n  width: 23%;\n  height: 628px;\n  overflow: auto;\n  gap: 5px;\n  background-color: #d3d3d373;\n  box-shadow: 0px 0px 3px 1px rgba(0, 0, 0, 0.3);\n}\n\n.projects-btns {\n  font-family: fantasy, "Roboto", sans-serif;\n  letter-spacing: 1px;\n  font-weight: 500;\n  font-size: 14px;\n  padding: 10px;\n  background-color: white;\n  color: #000028;\n  border: none;\n  border-bottom: 2px solid var(--darkLateGray);\n  box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n  transition: 0.2s;\n}\n\n.projects-btns:hover {\n  padding-left: 20px;\n  border-bottom: 2px solid bisque;\n}\n\n.projects-btns:active {\n  box-shadow: none;\n}\n\n.project-dialog {\n  border-style: dashed;\n  border: 2px dashed var(--darkLateGray);\n  border-radius: 20px;\n  width: 32%;\n  padding: 15px 40px;\n  animation: fade-out 0.5s ease-out;\n}\n\n.dialog-info {\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  gap: 8px;\n  font-weight: 600;\n}\n.dialog-btns {\n  display: flex;\n  justify-content: right;\n  gap: 10px;\n}\n\n.dialog-btns button {\n  padding: 6px 15px;\n  font-size: 14px;\n  font-weight: 600;\n  border: 1px solid var(--darkLateGray);\n  border-radius: 6px;\n  cursor: pointer;\n}\n\n.dialog-btns button:hover {\n  opacity: 0.8;\n}\n\ninput,\nselect {\n  padding: 8px;\n  border: none;\n  border-radius: 6px;\n  background-color: #f2f2f2;\n  box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.3);\n  font-size: 14px;\n}\n\ninput:focus,\nselect:focus {\n  outline: none;\n}\n\n.project-dialog::backdrop {\n  background-color: black;\n  opacity: 0.5;\n}\n\n.project-dialog[open] {\n  animation: fadein 0.5s ease-in forwards;\n}\n\n@keyframes fadein {\n  0% {\n    opacity: 0;\n    transform: scale(0);\n    display: none;\n  }\n\n  100% {\n    opacity: 1;\n    transform: scale(1);\n    display: block;\n  }\n}\n\n@keyframes fade-out {\n  0% {\n    opacity: 1;\n    transform: scale(1);\n    display: block;\n  }\n\n  100% {\n    opacity: 0;\n    transform: scale(0);\n    display: none;\n  }\n}\n\n.project-list {\n  width: 100%;\n  padding: 10px 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.project-list h2 {\n  font-family: "Poetsen One", sans-serif;\n  font-size: 31px;\n  color: var(--darkBrown);\n  margin-bottom: 0;\n}\n\n.project-list > p {\n  background-color: var(--darkBrown);\n  color: white;\n  width: fit-content;\n  padding: 4px 7px;\n  font-size: 15px;\n  border-radius: 3px;\n  letter-spacing: 1px;\n}\n\n.project-info {\n  width: 50%;\n  padding: 10px 30px;\n  font-weight: 500;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 6px;\n  margin-bottom: 10px;\n}\n\n.project-info span {\n  color: red;\n  font-weight: bold;\n}\n\n.project-info > div {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 7px;\n}\n.project-info button {\n  height: 35px;\n  padding: 0 25px;\n  border: none;\n  color: white;\n  background-color: black;\n  font-weight: bold;\n  border-radius: 20px;\n  box-shadow: 2px 2px 3px 0px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n}\n\n.project-info button:hover {\n  background-color: rgb(51, 51, 51);\n}\n\n/* todos section */\n\n.todo-add-btn {\n  border: none;\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  font-size: 14px;\n  gap: 5px;\n  padding: 9px 13px;\n  border-radius: 20px;\n  background-color: rgb(61, 102, 102);\n  color: white;\n  box-shadow: 2px 2px 3px 0px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n  transition: 0.2s;\n}\n\n.todo-add-btn:hover {\n  background-color: #000028;\n}\n\n.todo-list {\n  display: none;\n  width: 100%;\n}\n\n.todo-list h3 {\n  font-family: monospace;\n  font-size: 28px;\n  color: var(--darkBrown);\n}\n\n.todo-list h3::before {\n  content: "📑";\n}\n\n.todo {\n  background-color: rgba(226, 226, 226, 0.364);\n  position: relative;\n  display: flex;\n  width: 70%;\n  flex-direction: column;\n  border: 2px solid black;\n  border-radius: 10px;\n  padding: 10px 20px;\n  margin-top: 13px;\n  font-weight: 500;\n  font-size: 16px;\n  box-shadow: 2px 2px 3px 0px rgba(0, 0, 0, 0.3);\n  transition: all 0.6s ease 0s;\n}\n\n.todo p {\n  width: 50%;\n}\n\n.todo p + p {\n  font-family: monospace;\n  font-weight: bold;\n}\n\n.todo-btns {\n  width: 150px;\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  position: absolute;\n  top: 25%;\n  right: 15%;\n}\n\n.todo-btns button {\n  padding: 6px 15px;\n  font-size: 14px;\n  font-weight: 600;\n\n  background-color: rgb(186, 103, 1);\n  color: white;\n  border-radius: 6px;\n  cursor: pointer;\n  box-shadow: 2px 2px 3px 0px rgba(0, 0, 0, 0.3);\n  transition: 0.1s;\n}\n\n.todo-btns :nth-child(2) {\n  background-color: black;\n}\n\n.todo-btns button:hover {\n  color: black;\n  background-color: beige;\n}\n\n.todo-check {\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  gap: 2px;\n}\n\n.todo-check label {\n  font-family: Poetsen One, Arial, Helvetica, sans-serif;\n  font-size: 20px;\n  font-weight: bold;\n  color: var(--darkBrown);\n  cursor: pointer;\n}\n\ninput[type="checkbox"] {\n  cursor: pointer;\n  width: 17px;\n  height: 17px;\n  accent-color: var(--darkLateGray);\n}\n\n.project-container {\n  height: 100%;\n  padding: 10px 20px;\n}\n\n.todo-dialog {\n  border-style: dashed;\n  border: 2px dashed var(--darkLateGray);\n  border-radius: 20px;\n  width: 32%;\n  padding: 15px 40px;\n  animation: fade-out 0.5s ease-out;\n}\n\n.todo-inputs div {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  gap: 5px;\n}\n\n.todo-dialog[open] {\n  animation: fadein 0.5s ease-in forwards;\n}\n\n.todo-dialog::backdrop {\n  background-color: black;\n  opacity: 0.5;\n}\n\n.todo-dialog-btns {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.todo-dialog-btns button {\n  padding: 10px;\n  border: none;\n  color: white;\n  background-color: black;\n  font-weight: bold;\n  border-radius: 20px;\n  box-shadow: 2px 2px 3px 0px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n  transition: 0.1s;\n}\n\n.todo-dialog-btns button:hover {\n  opacity: 0.7;\n}\n\n#create-todo {\n  background-color: rgb(48, 0, 0);\n}\n\n.edit-todo {\n  border-style: dashed;\n  border: 2px dashed var(--darkLateGray);\n  border-radius: 20px;\n  width: 32%;\n  padding: 15px 40px;\n  animation: fade-out 0.5s ease-out;\n}\n\n.edit-todo[open] {\n  animation: fadein 0.5s ease-in forwards;\n}\n\n.edit-inputs {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  gap: 5px;\n  gap: 8px;\n}\n\n.edit-inputs button {\n  padding: 10px;\n  border: none;\n  color: white;\n  background-color: black;\n  font-weight: bold;\n  border-radius: 20px;\n  box-shadow: 2px 2px 3px 0px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n  transition: 0.1s;\n  margin-top: 10px;\n}\n\n.edit-inputs button:hover {\n  opacity: 0.7;\n}\n\n#edit-todo {\n  background-color: rgb(48, 0, 0);\n}\n\n/* footer section */\nfooter {\n  display: flex;\n  justify-content: space-between;\n  background-color: black;\n  padding: 5px 8px;\n}\n\nfooter p {\n  color: white;\n}\n\na {\n  color: rgb(212, 212, 212);\n  font-size: 15px;\n}\n'],sourceRoot:""}]);const A=i},314:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);o&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),t.push(c))}},t}},354:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},72:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],d=o.base?s[0]+o.base:s[0],c=a[d]||0,l="".concat(d," ").concat(c);a[d]=c+1;var p=e(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var f=r(u,o);o.byIndex=A,t.splice(A,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=e(a[i]);t[A].references--}for(var s=o(n,r),d=0;d<a.length;d++){var c=e(a[d]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}a=s}}},659:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},540:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},56:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},113:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return n[o](a,a.exports,e),a.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var o=t.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!n||!/^http(s?):/.test(n));)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.nc=void 0;var o={};(()=>{e.d(o,{uw:()=>B,pw:()=>x,VJ:()=>C,G$:()=>g,cH:()=>h,OQ:()=>gn});var n=e(72),t=e.n(n),r=e(825),a=e.n(r),i=e(659),A=e.n(i),s=e(56),d=e.n(s),c=e(540),l=e.n(c),p=e(113),u=e.n(p),f=e(208),m={};m.styleTagTransform=u(),m.setAttributes=d(),m.insert=A().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=l(),t()(f.A,m),f.A&&f.A.locals&&f.A.locals;const C=e.p+"3d41484d7a6e692b1426.png",h=e.p+"f9cea8966e12ce82409b.png",g=e.p+"d286e04c0cb4c8a8a968.png",E={projects:b=[],createProject:(n,t)=>{const e={name:n,color:t,todos:[]};b.push(e)}};var b;const x=(n,t)=>{n.parentElement.style="opacity: 0.5;text-decoration-line: line-through;",t.completed=!0},B=(n,t)=>{n.parentElement.style="",t.completed=!1};let y=1;const v=n=>{const t=E.projects[n];localStorage.setItem(`Project ${n}`,JSON.stringify(t))},w=n=>{$.style.display="none",_.style.display="block";const t=n.target.textContent.split("# ")[1];document.querySelectorAll(".project-container").forEach((n=>{const e=n.querySelector("h3").textContent;n.style.display=e===t?"block":"none"})),$.style.display="none",_.style.display="block"};function k(n){return function(n,t){return n instanceof Date?new n.constructor(t):new Date(t)}(n,Date.now())}function j(n){const t=Object.prototype.toString.call(n);return n instanceof Date||"object"==typeof n&&"[object Date]"===t?new n.constructor(+n):"number"==typeof n||"[object Number]"===t||"string"==typeof n||"[object String]"===t?new Date(n):new Date(NaN)}function S(n,t){const e=j(n),o=j(t),r=e.getTime()-o.getTime();return r<0?-1:r>0?1:r}Math.pow(10,8);const M=43200,Y=1440;function P(n){const t=j(n);return+function(n){const t=j(n);return t.setHours(23,59,59,999),t}(t)==+function(n){const t=j(n),e=t.getMonth();return t.setFullYear(t.getFullYear(),e+1,0),t.setHours(23,59,59,999),t}(t)}function D(n,t){const e=j(n),o=j(t),r=S(e,o),a=Math.abs(function(n,t){const e=j(n),o=j(t);return 12*(e.getFullYear()-o.getFullYear())+(e.getMonth()-o.getMonth())}(e,o));let i;if(a<1)i=0;else{1===e.getMonth()&&e.getDate()>27&&e.setDate(30),e.setMonth(e.getMonth()-r*a);let t=S(e,o)===-r;P(j(n))&&1===a&&1===S(n,o)&&(t=!1),i=r*(a-Number(t))}return 0===i?0:i}function L(n,t,e){const o=function(n,t){return+j(n)-+j(t)}(n,t)/1e3;return(r=e?.roundingMethod,n=>{const t=(r?Math[r]:Math.trunc)(n);return 0===t?0:t})(o);var r}const W={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function z(n){return(t={})=>{const e=t.width?String(t.width):n.defaultWidth;return n.formats[e]||n.formats[n.defaultWidth]}}const q={date:z({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:z({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:z({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},T={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function U(n){return(t,e)=>{let o;if("formatting"===(e?.context?String(e.context):"standalone")&&n.formattingValues){const t=n.defaultFormattingWidth||n.defaultWidth,r=e?.width?String(e.width):t;o=n.formattingValues[r]||n.formattingValues[t]}else{const t=n.defaultWidth,r=e?.width?String(e.width):n.defaultWidth;o=n.values[r]||n.values[t]}return o[n.argumentCallback?n.argumentCallback(t):t]}}const I={ordinalNumber:(n,t)=>{const e=Number(n),o=e%100;if(o>20||o<10)switch(o%10){case 1:return e+"st";case 2:return e+"nd";case 3:return e+"rd"}return e+"th"},era:U({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:U({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:n=>n-1}),month:U({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:U({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:U({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function N(n){return(t,e={})=>{const o=e.width,r=o&&n.matchPatterns[o]||n.matchPatterns[n.defaultMatchWidth],a=t.match(r);if(!a)return null;const i=a[0],A=o&&n.parsePatterns[o]||n.parsePatterns[n.defaultParseWidth],s=Array.isArray(A)?function(n,t){for(let t=0;t<n.length;t++)if(n[t].test(i))return t}(A):function(n,t){for(const t in n)if(Object.prototype.hasOwnProperty.call(n,t)&&n[t].test(i))return t}(A);let d;return d=n.valueCallback?n.valueCallback(s):s,d=e.valueCallback?e.valueCallback(d):d,{value:d,rest:t.slice(i.length)}}}const O={ordinalNumber:(Q={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:n=>parseInt(n,10)},(n,t={})=>{const e=n.match(Q.matchPattern);if(!e)return null;const o=e[0],r=n.match(Q.parsePattern);if(!r)return null;let a=Q.valueCallback?Q.valueCallback(r[0]):r[0];return a=t.valueCallback?t.valueCallback(a):a,{value:a,rest:n.slice(o.length)}}),era:N({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:N({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:n=>n+1}),month:N({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:N({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:N({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})};var Q;const F={code:"en-US",formatDistance:(n,t,e)=>{let o;const r=W[n];return o="string"==typeof r?r:1===t?r.one:r.other.replace("{{count}}",t.toString()),e?.addSuffix?e.comparison&&e.comparison>0?"in "+o:o+" ago":o},formatLong:q,formatRelative:(n,t,e,o)=>T[n],localize:I,match:O,options:{weekStartsOn:0,firstWeekContainsDate:1}};let R={};function X(){return R}function Z(n){const t=j(n),e=new Date(Date.UTC(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds()));return e.setUTCFullYear(t.getFullYear()),+n-+e}function V(n,t){return function(n,t,e){const o=X(),r=e?.locale??o.locale??F,a=S(n,t);if(isNaN(a))throw new RangeError("Invalid time value");const i=Object.assign({},e,{addSuffix:e?.addSuffix,comparison:a});let A,s;a>0?(A=j(t),s=j(n)):(A=j(n),s=j(t));const d=L(s,A),c=(Z(s)-Z(A))/1e3,l=Math.round((d-c)/60);let p;if(l<2)return e?.includeSeconds?d<5?r.formatDistance("lessThanXSeconds",5,i):d<10?r.formatDistance("lessThanXSeconds",10,i):d<20?r.formatDistance("lessThanXSeconds",20,i):d<40?r.formatDistance("halfAMinute",0,i):d<60?r.formatDistance("lessThanXMinutes",1,i):r.formatDistance("xMinutes",1,i):0===l?r.formatDistance("lessThanXMinutes",1,i):r.formatDistance("xMinutes",l,i);if(l<45)return r.formatDistance("xMinutes",l,i);if(l<90)return r.formatDistance("aboutXHours",1,i);if(l<Y){const n=Math.round(l/60);return r.formatDistance("aboutXHours",n,i)}if(l<2520)return r.formatDistance("xDays",1,i);if(l<M){const n=Math.round(l/Y);return r.formatDistance("xDays",n,i)}if(l<2*M)return p=Math.round(l/M),r.formatDistance("aboutXMonths",p,i);if(p=D(s,A),p<12){const n=Math.round(l/M);return r.formatDistance("xMonths",n,i)}{const n=p%12,t=Math.trunc(p/12);return n<3?r.formatDistance("aboutXYears",t,i):n<9?r.formatDistance("overXYears",t,i):r.formatDistance("almostXYears",t+1,i)}}(n,k(n),t)}class G{constructor(n,t,e,o,r,a){this.id=n,this.title=t,this.description=e,this.dueDate=o,this.priority=r,this.completed=a}}const H=document.querySelector("h1"),J=new Image;J.src=g,J.classList.add("check-icon"),H.parentNode.insertBefore(J,H);const $=document.querySelector(".project-list"),_=document.querySelector(".todo-list"),K=document.querySelector(".projects"),nn=document.querySelector("#create-pro"),tn=document.querySelector("#myProjects"),en=document.querySelector(".proNum"),on=document.createElement("button"),rn=document.querySelector("#cancel"),an=document.querySelector(".project-dialog"),An=document.querySelector("#name"),sn=document.querySelector("#color"),dn=document.querySelector("#title"),cn=document.querySelector("#description"),ln=document.querySelector("#date"),pn=document.querySelector("#priority");nn.addEventListener("click",(()=>{((n,t)=>{for(let t=0;t<E.projects.length;t++){if(""===n.value.trim())return void alert("Please Enter Project's Name!");if(E.projects[t].name===n.value.trim())return void alert("Project's name already exist.")}console.log(E.projects),E.createProject(n.value.trim(),t.value),fn(n,t),(()=>{const n=E.projects.length,t=E.projects[n-1];localStorage.setItem("Project "+y++,JSON.stringify(t))})()})(An,sn)}));const un=new Image;un.src=C,un.classList.add("plus"),on.id="addBtn",on.textContent="New Project",on.insertBefore(un,on.firstChild),on.addEventListener("click",(()=>{an.showModal()})),rn.addEventListener("click",(()=>{an.close()})),tn.addEventListener("click",(()=>{$.style.display="flex",_.style.display="none"}));const fn=(n,t)=>{const e=document.createElement("button"),o=document.createElement("button"),r=document.createElement("div"),a=document.createElement("div"),i=document.createElement("p"),A=document.createElement("span"),s=document.createElement("button");i.textContent=`# ${n.value||n} / todos: `,A.textContent="0",e.textContent=`# ${n.value||n}`,e.classList.add("projects-btns"),e.style.backgroundColor=`light${t.value||t}`,r.style.backgroundColor=`light${t.value||t}`,r.classList.add("project-info"),r.setAttribute("id",""),s.textContent="Remove Project",a.append(i,A),r.append(a,s),$.appendChild(r),K.appendChild(e);const d=document.createElement("div"),c=document.createElement("h3");c.textContent=n.value||n,d.classList.add("project-container"),d.style.backgroundColor=`light${t.value||t}`,d.style.display="block";const l=new Image;l.src=h,l.classList.add("plus"),o.classList.add("todo-add-btn"),o.textContent="Add Task",o.insertBefore(l,o.firstChild),o.addEventListener("click",(()=>{mn.showModal()})),d.append(c,o);const p=c.textContent.split().splice(0,1).join();s.addEventListener("click",(()=>{((n,t,e,o)=>{n.remove(),t.remove(),e.remove();const r=E.projects;r.forEach(((n,t)=>{n.name===o&&(r.splice(t,1),(()=>{localStorage.clear();const n=E.projects;for(let t=0;t<n.length;t++)v(t)})())}))})(r,e,d,p),en.textContent=E.projects.length})),en.textContent=E.projects.length,e.addEventListener("click",w),"string"!=typeof n&&(n.value="",an.close()),document.querySelectorAll(".project-container").forEach((n=>{n.style.display="none"})),_.appendChild(d)},mn=document.querySelector(".todo-dialog"),Cn=document.querySelector("#cancel-todo");document.querySelector("#create-todo").addEventListener("click",(()=>{document.querySelectorAll(".project-container").forEach((n=>{"block"===n.style.display&&((n,t,e,o,r)=>{""!==t.value.trim()&&""!==e.value.trim()&&""!==o.value.trim()?(gn++,E.projects.forEach(((a,i)=>{if(a.name===n){const A=new G(gn,t.value.trim(),e.value,o.value,r.value,!1);a.todos.push(A),hn(t,e,o,A,n),v(i)}}))):alert("Please Fill The Required Fields")})(n.firstChild.textContent,dn,cn,ln,pn)}))})),Cn.addEventListener("click",(()=>{mn.close()}));const hn=(n,t,e,o,r)=>{const a=document.createElement("div"),i=document.createElement("div"),A=document.createElement("div"),s=document.createElement("input"),d=document.createElement("label"),c=document.createElement("p"),l=document.createElement("p"),p=document.createElement("div"),u=document.createElement("button"),f=document.createElement("button");i.classList.add("todo"),A.classList.add("todo-check"),p.classList.add("todo-btns"),u.textContent="Delete",f.textContent="edit",s.setAttribute("type","checkbox"),s.setAttribute("id","todo"),s.setAttribute("name","todo"),d.setAttribute("for","todo");let m=e.value||e,C=V(e.value||e,{addSuffix:!0});l.textContent=C,d.textContent=o.title,c.textContent=o.description,f.addEventListener("click",(()=>{((n,t,e,o,r,a,i)=>{const A=document.createElement("dialog");A.classList.add("edit-todo"),A.dataset.todoId=n.id;const s=document.createElement("h3");s.textContent="Edit Task",A.appendChild(s);const d=document.createElement("div");d.classList.add("edit-inputs");const c=document.createElement("label");c.setAttribute("for","edit-title"),c.textContent="Title :";const l=document.createElement("input");l.setAttribute("type","text"),l.setAttribute("id","edit-title"),l.setAttribute("name","edit-title"),l.setAttribute("placeholder","Enter Title"),l.value=o.textContent,d.appendChild(c),d.appendChild(l);const p=document.createElement("label");p.setAttribute("for","edit-description"),p.textContent="Description :";const u=document.createElement("input");u.setAttribute("type","text"),u.setAttribute("id","edit-description"),u.setAttribute("name","edit-description"),u.setAttribute("placeholder","Write Description"),u.value=r.textContent,d.appendChild(p),d.appendChild(u);const f=document.createElement("label");f.setAttribute("for","edit-date"),f.textContent="Due Date :";const m=document.createElement("input");m.setAttribute("type","date"),m.setAttribute("id","edit-date"),m.setAttribute("name","edit-date"),m.setAttribute("min","2024-01-01"),m.value=i,d.appendChild(f),d.appendChild(m);const C=document.createElement("label");C.setAttribute("for","edit-priority"),C.textContent="Set Priority :";const h=document.createElement("select");h.setAttribute("id","edit-priority"),h.setAttribute("name","edit-priority"),["🚩Priority 1","🏴Priority 2","🏳️Priority 3","🏳️Priority 4"].forEach((n=>{const t=document.createElement("option");t.value=n,t.textContent=n,h.appendChild(t)})),d.appendChild(C),d.appendChild(h);const g=document.createElement("button");g.setAttribute("id","cancel-edit"),g.textContent="Cancel",g.addEventListener("click",(()=>{A.close(),A.remove()}));const b=document.createElement("button");b.setAttribute("id","edit-todo"),b.textContent="Confirm",b.addEventListener("click",(()=>{((n,t,e,o,r,a,i,A,s)=>{E.projects.forEach(((e,o)=>{let r=e.todos;e.name===n&&(r.forEach((n=>{n===t&&(t.title=a.value,t.description=i.value,t.dueDate=A.value,t.priority=s.value)})),v(o))}));const d=V(A.value,{addSuffix:!0});e.textContent=a.value,o.textContent=i.value,r.textContent=d})(t,e,o,r,a,l,u,m,h),A.close(),A.remove()})),d.appendChild(b),d.appendChild(g),A.appendChild(d),document.body.appendChild(A),A.showModal()})(o,r,o,d,c,l,m)})),s.addEventListener("change",(()=>{E.projects.forEach(((n,t)=>{s.checked?(x(A,o),n.name===r&&v(t)):(B(A,o),n.name===r&&v(t))}))})),f.setAttribute("id",d.textContent),p.append(f,u),A.append(s,d),i.append(A,c,l,p),a.appendChild(i),document.querySelectorAll(".project-container").forEach((n=>{n.querySelector("h3").textContent===r&&n.appendChild(a)})),u.addEventListener("click",(()=>{((n,t,e)=>{n.remove(),E.projects.forEach(((n,o)=>{let r=n.todos;n.name===t&&r.forEach(((t,r)=>{t.title===e&&n.todos.splice(r,1),v(o)}))}))})(i,r,d.textContent);const n=document.querySelectorAll(".project-info span");for(let t=0;t<n.length;t++)n[t].textContent=E.projects[t].todos.length}));const h=document.querySelectorAll(".project-info span");for(let n=0;n<h.length;n++)h[n].textContent=E.projects[n].todos.length;"string"!=typeof n&&(n.value="",t.value="",e.value="",mn.close())};E.createProject("Home","Default"),(()=>{const n=document.createElement("button"),t=document.createElement("div"),e=document.createElement("p"),o=document.createElement("span");t.classList.add("project-info"),t.style.backgroundColor="#d3d3d3d1",e.textContent="# Home / todos: ",o.textContent="0",n.textContent="# Home",n.classList.add("projects-btns");const r=document.createElement("button"),a=document.createElement("div"),i=document.createElement("h3");i.textContent="Home",a.classList.add("project-container");const A=new Image;A.src=h,A.classList.add("plus"),r.classList.add("todo-add-btn"),r.textContent="Add Task",r.insertBefore(A,r.firstChild),r.addEventListener("click",(()=>{mn.showModal()})),a.append(i,r),a.append(i,r),_.appendChild(a),n.addEventListener("click",w),e.appendChild(o),K.append(on,n),t.appendChild(e),$.appendChild(t)})();let gn=0;localStorage.getItem("Project 0")?(()=>{E.projects.shift();for(let n=0;n<localStorage.length;n++){let t=localStorage.getItem(`Project ${n}`);E.projects.push(JSON.parse(t))}E.projects.forEach((n=>{"Home"!==n.name&&fn(n.name,n.color);for(let t=0;t<n.todos.length;t++)0!==n.todos.length&&(hn(n.todos[t].title,n.todos[t].description,n.todos[t].dueDate,n.todos[t],n.name),document.querySelectorAll("label").forEach((e=>{if(e.textContent==n.todos[t].title){const o=e.parentElement.firstChild;1==n.todos[t].completed?(x(e.parentElement,n.todos[t]),o.checked=!0):B(e.parentElement,n.todos[t])}})))}))})():localStorage.setItem("Project 0",JSON.stringify(E.projects[0]))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,