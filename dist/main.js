(()=>{"use strict";var e={208:(e,n,t)=>{t.d(n,{A:()=>i});var r=t(354),o=t.n(r),c=t(314),a=t.n(c)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap);"]),a.push([e.id,'* {\n  font-family: "Roboto", sans-serif;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  height: 100vh;\n  scroll-behavior: smooth;\n  display: flex;\n  flex-direction: column;\n}\n\nheader {\n  text-align: center;\n  background-color: bisque;\n}\n\n.plus {\n  width: 17px;\n}\n\n#addBtn {\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  font-size: 14px;\n  gap: 5px;\n  padding: 3px 5px;\n}\n\n#todoAddBtn {\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  font-size: 14px;\n  gap: 5px;\n  padding: 3px 5px;\n}\n\n.container {\n  display: flex;\n  height: 100%;\n}\n\n#myProjects {\n  color: white;\n  font-style: italic;\n  text-align: center;\n  border: none;\n  font-weight: 700;\n  font-size: 18px;\n  padding: 12px;\n  background-color: brown;\n  cursor: pointer;\n}\n\n#myProjects:hover {\n  background-color: rgba(165, 42, 42, 0.742);\n}\n\n.projects {\n  background-color: #e4e4e4;\n  display: flex;\n  flex-direction: column;\n  width: 20%;\n  gap: 5px;\n}\n\n.project-list {\n  background-color: #ababab8f;\n  width: 100%;\n}\n\n.todo-list {\n  display: none;\n  width: 100%;\n}\n\nfooter {\n  display: flex;\n  justify-content: space-between;\n  background-color: black;\n  padding: 5px 8px;\n}\n\na {\n  color: rgb(212, 212, 212);\n  font-size: 15px;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,iCAAiC;EACjC,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,SAAS;EACT,aAAa;EACb,uBAAuB;EACvB,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,gBAAgB;EAChB,eAAe;EACf,QAAQ;EACR,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,gBAAgB;EAChB,eAAe;EACf,QAAQ;EACR,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,YAAY;EACZ,gBAAgB;EAChB,eAAe;EACf,aAAa;EACb,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,0CAA0C;AAC5C;;AAEA;EACE,yBAAyB;EACzB,aAAa;EACb,sBAAsB;EACtB,UAAU;EACV,QAAQ;AACV;;AAEA;EACE,2BAA2B;EAC3B,WAAW;AACb;;AAEA;EACE,aAAa;EACb,WAAW;AACb;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,uBAAuB;EACvB,gBAAgB;AAClB;;AAEA;EACE,yBAAyB;EACzB,eAAe;AACjB",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");\r\n\r\n* {\r\n  font-family: "Roboto", sans-serif;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  height: 100vh;\r\n  scroll-behavior: smooth;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\nheader {\r\n  text-align: center;\r\n  background-color: bisque;\r\n}\r\n\r\n.plus {\r\n  width: 17px;\r\n}\r\n\r\n#addBtn {\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  gap: 5px;\r\n  padding: 3px 5px;\r\n}\r\n\r\n#todoAddBtn {\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  gap: 5px;\r\n  padding: 3px 5px;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  height: 100%;\r\n}\r\n\r\n#myProjects {\r\n  color: white;\r\n  font-style: italic;\r\n  text-align: center;\r\n  border: none;\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n  padding: 12px;\r\n  background-color: brown;\r\n  cursor: pointer;\r\n}\r\n\r\n#myProjects:hover {\r\n  background-color: rgba(165, 42, 42, 0.742);\r\n}\r\n\r\n.projects {\r\n  background-color: #e4e4e4;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 20%;\r\n  gap: 5px;\r\n}\r\n\r\n.project-list {\r\n  background-color: #ababab8f;\r\n  width: 100%;\r\n}\r\n\r\n.todo-list {\r\n  display: none;\r\n  width: 100%;\r\n}\r\n\r\nfooter {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: black;\r\n  padding: 5px 8px;\r\n}\r\n\r\na {\r\n  color: rgb(212, 212, 212);\r\n  font-size: 15px;\r\n}\r\n'],sourceRoot:""}]);const i=a},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,c){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(a[s]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);r&&a[d[0]]||(void 0!==c&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=c),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),c="/*# ".concat(o," */");return[n].concat([c]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var c={},a=[],i=0;i<e.length;i++){var s=e[i],l=r.base?s[0]+r.base:s[0],d=c[l]||0,A="".concat(l," ").concat(d);c[l]=d+1;var p=t(A),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var f=o(u,r);r.byIndex=i,n.splice(i,0,{identifier:A,updater:f,references:1})}a.push(A)}return a}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var c=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<c.length;a++){var i=t(c[a]);n[i].references--}for(var s=r(e,o),l=0;l<c.length;l++){var d=t(c[l]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}c=s}}},659:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var c=t.sourceMap;c&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var c=n[r]={id:r,exports:{}};return e[r](c,c.exports,t),c.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&(!e||!/^http(s?):/.test(e));)e=r[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{var e=t(72),n=t.n(e),r=t(825),o=t.n(r),c=t(659),a=t.n(c),i=t(56),s=t.n(i),l=t(540),d=t.n(l),A=t(113),p=t.n(A),u=t(208),f={};f.styleTagTransform=p(),f.setAttributes=s(),f.insert=a().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=d(),n()(u.A,f),u.A&&u.A.locals&&u.A.locals;class m{constructor(e,n,t,r){this.title=e,this.description=n,this.dueDate=t,this.priority=r}}const g=t.p+"3d41484d7a6e692b1426.png",h=t.p+"f9cea8966e12ce82409b.png",y=function(){const e=document.querySelector(".project-list"),n=document.querySelector(".todo-list"),t=document.querySelector(".projects"),r=document.querySelector("#myProjects"),o=document.querySelector(".proNum"),c=document.querySelector("#cancel"),a=document.querySelector(".CreateProject"),i=document.querySelector(".CreateTodo"),s=document.querySelector("#cancel-todo"),l=new Image;l.src=g,l.classList.add("plus");const d=document.createElement("button");d.id="addBtn",d.textContent="New Project",d.insertBefore(l,d.firstChild);const A=document.createElement("button"),p=document.createElement("div");p.style.backgroundColor="white",A.textContent="# Home",d.addEventListener("click",(()=>{a.showModal()})),c.addEventListener("click",(()=>{a.close()}));const u={projects:f=[],createProject:(e,n)=>{const t={name:e,color:n,todos:[],addNewTodo(e){this.todos.push(e)}};f.push(t)}};var f;t.append(d,A),e.appendChild(p),u.createProject("Home","Default"),p.textContent=`# Home / todos: ${u.projects[0].todos.length}`;const y=t=>{const r=t.target.textContent.split("# ")[1];document.querySelectorAll(".project-container").forEach((e=>{const n=e.querySelector("h3").textContent;e.style.display=n===r?"block":"none"})),console.log(u.projects),e.style.display="none",n.style.display="block"};return s.addEventListener("click",(()=>{i.close()})),r.addEventListener("click",(()=>{e.style.display="block",n.style.display="none"})),{createProject:()=>{let r=document.querySelector("#name"),c=document.querySelector("#color");const s=document.createElement("button"),l=document.createElement("button"),d=document.createElement("div");d.textContent=`# ${r.value} / todos: 0`,s.textContent=`# ${r.value}`,s.style.backgroundColor=`light${c.value}`,d.style.backgroundColor=`light${c.value}`,e.appendChild(d),t.appendChild(s),u.createProject(r.value,c.value);const A=document.createElement("div"),p=document.createElement("h3");p.textContent=r.value,A.classList.add("project-container");const f=new Image;f.src=h,f.classList.add("plus"),l.classList.add("todo-add-btn"),l.textContent="Add Task",l.insertBefore(f,l.firstChild),l.addEventListener("click",(()=>{i.showModal()})),A.append(p,l),A.append(p,l),r.value="",o.textContent=u.projects.length,s.addEventListener("click",y),a.close();const g=document.querySelectorAll(".project-container");g.forEach((e=>{e.style.display="none"})),document.querySelector("#create-todo").addEventListener("click",(()=>{g.forEach((e=>{"block"===e.style.display&&(e=>{const n=document.createElement("div"),t=document.createElement("div"),r=document.createElement("input"),o=document.createElement("label"),c=document.createElement("p"),a=document.querySelector("#title"),i=document.querySelector("#description"),s=document.querySelector("#date"),l=document.querySelector("#priority");r.setAttribute("type","checkbox"),r.setAttribute("id","todo"),r.setAttribute("name","todo"),o.setAttribute("for","todo"),u.projects.forEach((n=>{if(n.name===e){const e=new m(a.value,i.value,s.value,l.value);n.addNewTodo(e),o.textContent=e.title,c.textContent=e.description,console.log(p.textContent)}})),console.log(u.projects),console.log(p.textContent),t.append(r,o,c),n.appendChild(t),A.appendChild(n)})(e.firstChild.textContent)}))})),n.appendChild(A)}}}();document.querySelector("#create-pro").addEventListener("click",y.createProject),new m("Valorant","play many games","28 March","First"),new m("League of Legends","play one game","4/20/2024","Second")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,